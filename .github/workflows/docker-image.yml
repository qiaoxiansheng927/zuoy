name: Deploy Web App

on:
  push:
    branches: [ main ]  # 触发条件：当代码推送到 main 分支时
  pull_request:
    branches: [ main ]  # 触发条件：当有拉取请求合并到 main 分支时
  workflow_dispatch:
  
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Build Docker Image
      run: |
        docker build -t web-app .

    - name: Start ngrok Tunnel
      id: start-ngrok
      run: |
        # 下载 ngrok 并解压
        wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
        unzip ngrok-stable-linux-amd64.zip
        # 启动 ngrok 并绑定到容器的端口
        ./ngrok http 8000 &
        # 等待 ngrok 启动并获取 URL
        sleep 5
        export TUNNEL_URL=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
        echo "TUNNEL_URL=$TUNNEL_URL" >> $GITHUB_ENV
        echo "Service is available at $TUNNEL_URL"

    - name: Run Docker Image for Testing
      run: |
        docker run -d --name web-app -p 8000:8000 web-app

    - name: Access Service via ngrok
      run: |
        # 测试 URL 是否可用
        curl ${{ env.TUNNEL_URL }}

    - name: Export Docker Image
      run: |
        docker save -o web-app.tar web-app

    - name: Upload Docker Image Tarball
      uses: actions/upload-artifact@v3
      with:
        name: web-app-tar
        path: web-app.tar